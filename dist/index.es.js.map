{"version":3,"file":"index.es.js","sources":["../src/util.ts","../src/StrokeManager.ts","../src/Manager.ts","../src/tools/PenTool.ts","../src/tools/EraserTool.ts","../node_modules/color-name/index.js","../node_modules/color-parse/index.mjs","../node_modules/color-alpha/index.mjs","../src/tools/HighlighterTool.ts"],"sourcesContent":["import { IPoint } from \"./types\";\r\n\r\n/**\r\n * Get the distance between two points\r\n * @param p1\r\n * @param p2\r\n * @returns number\r\n */\r\nexport function getEuclidean(p1: IPoint, p2: IPoint): number {\r\n  return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\r\n}\r\n\r\n/**\r\n * Gets the unit vector representing the vector from start\r\n * point to end point with a length of 1.\r\n * @param startPoint\r\n * @param endPoint\r\n * @returns IPoint\r\n */\r\nexport function getUnitVector(startPoint: IPoint, endPoint: IPoint): IPoint {\r\n  const length = getEuclidean(startPoint, endPoint);\r\n\r\n  const dirVect = {\r\n    x: endPoint.x - startPoint.x,\r\n    y: endPoint.y - startPoint.y,\r\n  };\r\n\r\n  const unitVect: IPoint = {\r\n    x: dirVect.x / length,\r\n    y: dirVect.y / length,\r\n  };\r\n\r\n  return unitVect;\r\n}\r\n","import { IPoint, IStrokePart } from \"./types\";\r\nimport { getEuclidean } from \"./util\";\r\n\r\nexport interface IOnStrokePartHandler {\r\n  (strokePart: IStrokePart): void;\r\n}\r\n\r\nexport interface ITouch {\r\n  id: number;\r\n  position: IPoint;\r\n}\r\n\r\nexport class StrokeManager {\r\n  // reference to canvas element\r\n  private canvas: HTMLCanvasElement;\r\n  // holds last touch point in a drag\r\n  private lastTouch: ITouch | null;\r\n  // value indicates how sensitive the stroke detection is higher is better\r\n  private sensitivity: number;\r\n  // holds all of the last emitted stroke parts in a drag\r\n  private lastStrokeParts: IStrokePart[];\r\n  // the handlers listening for new strokes\r\n  private onStrokePartHandlers: IOnStrokePartHandler[];\r\n\r\n  constructor(canvas: HTMLCanvasElement) {\r\n    this.canvas = canvas;\r\n    this.lastTouch = null;\r\n    this.sensitivity = 20.0;\r\n    this.lastStrokeParts = [];\r\n    this.onStrokePartHandlers = [];\r\n\r\n    this.onTouchStart = this.onTouchStart.bind(this);\r\n    this.onTouchEnd = this.onTouchEnd.bind(this);\r\n    this.onTouchCancel = this.onTouchCancel.bind(this);\r\n    this.onTouchMove = this.onTouchMove.bind(this);\r\n    this.destroy = this.destroy.bind(this);\r\n    this.getRelativePosition = this.getRelativePosition.bind(this);\r\n\r\n    this.canvas.addEventListener(\"touchstart\", this.onTouchStart, {\r\n      passive: false\r\n    });\r\n    this.canvas.addEventListener(\"touchend\", this.onTouchEnd, {\r\n      passive: false\r\n    });\r\n    this.canvas.addEventListener(\"touchcancel\", this.onTouchCancel, {\r\n      passive: false\r\n    });\r\n    this.canvas.addEventListener(\"touchmove\", this.onTouchMove, {\r\n      passive: false\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Registers a handler to be fired on a new stroke part\r\n   * @param handler\r\n   */\r\n  public onStrokePart(handler: IOnStrokePartHandler): void {\r\n    this.onStrokePartHandlers.push(handler);\r\n  }\r\n\r\n  /**\r\n   * Removes all active listeners\r\n   */\r\n  public destroy(): void {\r\n    this.onStrokePartHandlers = [];\r\n    this.lastStrokeParts = [];\r\n    this.canvas.removeEventListener(\"touchstart\", this.onTouchStart);\r\n    this.canvas.removeEventListener(\"touchend\", this.onTouchEnd);\r\n    this.canvas.removeEventListener(\"touchcancel\", this.onTouchCancel);\r\n    this.canvas.removeEventListener(\"touchmove\", this.onTouchMove);\r\n  }\r\n\r\n  /**\r\n   * Get relative position to canvas\r\n   * @param clientX\r\n   * @param clientY\r\n   * @returns IPoint\r\n   */\r\n  private getRelativePosition(clientX: number, clientY: number): IPoint {\r\n    const rect = this.canvas.getBoundingClientRect();\r\n\r\n    return {\r\n      x: clientX - rect.left,\r\n      y: clientY - rect.top\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Creates a new touch if one does not\r\n   * already exist\r\n   * @param e\r\n   */\r\n  private onTouchStart(e: TouchEvent): void {\r\n    e.preventDefault();\r\n\r\n    // if there is an ongoing touch, ignore this event\r\n    if (this.lastTouch) {\r\n      return;\r\n    }\r\n\r\n    const touches: TouchList = e.changedTouches;\r\n\r\n    // only get the first touch\r\n    const touch = touches.item(0);\r\n\r\n    // save the touch\r\n    this.lastTouch = {\r\n      id: touch.identifier,\r\n      position: this.getRelativePosition(touch.clientX, touch.clientY)\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Creates a line from last touch to current touch\r\n   * point and emits event. Does no-op if no existing touch\r\n   * @param e\r\n   */\r\n  private onTouchMove(e: TouchEvent): void {\r\n    e.preventDefault();\r\n\r\n    // if no last touch... something is wrong\r\n    if (!this.lastTouch) {\r\n      return;\r\n    }\r\n\r\n    const touches: TouchList = e.changedTouches;\r\n\r\n    // find the current touch we are tracking\r\n    const touch: Touch = Array.from(touches).find(touch => {\r\n      return touch.identifier === this.lastTouch.id;\r\n    });\r\n\r\n    // if the touch was not one we were tracking,\r\n    // ignore and no-op\r\n    if (!touch) {\r\n      return;\r\n    }\r\n\r\n    const nextTouch: ITouch = {\r\n      id: touch.identifier,\r\n      position: this.getRelativePosition(touch.clientX, touch.clientY)\r\n    };\r\n\r\n    // If sensitivity setting has been set,\r\n    // check if this point is far enough from last\r\n    // touch to be drawn\r\n    if (\r\n      this.sensitivity &&\r\n      getEuclidean(nextTouch.position, this.lastTouch.position) <\r\n        10.0 / this.sensitivity\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const strokePart: IStrokePart = {\r\n      endPoint: nextTouch.position,\r\n      startPoint: this.lastTouch.position,\r\n      isStart: this.lastStrokeParts.length === 0,\r\n      isEnd: false\r\n    };\r\n\r\n    this.onStrokePartHandlers.forEach(handler => {\r\n      handler(strokePart);\r\n    });\r\n\r\n    // save this touch as last touch\r\n    this.lastTouch = nextTouch;\r\n    this.lastStrokeParts.push(strokePart);\r\n  }\r\n\r\n  /**\r\n   * Draws a line from last point to final point. Removes\r\n   * the reference to last touch point.\r\n   * @param e\r\n   */\r\n  private onTouchEnd(e: TouchEvent): void {\r\n    e.preventDefault();\r\n\r\n    // if no last touch... something is wrong\r\n    if (!this.lastTouch) {\r\n      return;\r\n    }\r\n\r\n    const touches: TouchList = e.changedTouches;\r\n\r\n    // find the current touch we are tracking\r\n    const touch: Touch = Array.from(touches).find(touch => {\r\n      return touch.identifier === this.lastTouch.id;\r\n    });\r\n\r\n    // if the touch was not one we were tracking,\r\n    // ignore and no-op\r\n    if (!touch) {\r\n      return;\r\n    }\r\n\r\n    const endPoint = this.getRelativePosition(touch.clientX, touch.clientY);\r\n\r\n    const strokePart: IStrokePart = {\r\n      startPoint: this.lastTouch.position,\r\n      endPoint,\r\n      isStart: false,\r\n      isEnd: true\r\n    };\r\n\r\n    this.onStrokePartHandlers.forEach(handler => {\r\n      handler(strokePart);\r\n    });\r\n\r\n    this.lastTouch = null;\r\n    this.lastStrokeParts = [];\r\n  }\r\n\r\n  /**\r\n   * Removes the current last touch point\r\n   * @param e\r\n   */\r\n  private onTouchCancel(e: TouchEvent): void {\r\n    e.preventDefault();\r\n    this.lastTouch = null;\r\n    this.lastStrokeParts = [];\r\n  }\r\n}\r\n","import { IStrokePart, ITool } from \"./types\";\r\nimport { StrokeManager } from \"./StrokeManager\";\r\n\r\nexport class Manager {\r\n  // reference to the canvas\r\n  private canvas: HTMLCanvasElement;\r\n  // reference to stroke manager\r\n  private strokeManager: StrokeManager;\r\n  // holds the pixel ratio between canvas backing\r\n  // store and device ratio (used for hi fi displays)\r\n  private pixelRatio: number;\r\n  // the width of the canvas\r\n  private canvasWidth: number;\r\n  // the height of the canvas\r\n  private canvasHeight: number;\r\n  // holds a reference to next animation frame\r\n  private nextAnimationFrame: number;\r\n  // the currently selected tool\r\n  private currentTool: ITool | null;\r\n  // holds stroke parts for ongoing stroke\r\n  private currentStroke: IStrokePart[];\r\n  // the state of the canvas (not including ongoing stroke)\r\n  private canvasState: ImageData | null;\r\n  // indicates whether changes have occured that require redraw\r\n  private shouldDraw: boolean;\r\n  // indicates whether canvas should commit its next draw state to current state\r\n  private shouldCommit: boolean;\r\n\r\n  constructor(\r\n    canvas: HTMLCanvasElement,\r\n    canvasWidth: number,\r\n    canvasHeight: number\r\n  ) {\r\n    this.canvas = canvas;\r\n    this.canvasWidth = canvasWidth;\r\n    this.canvasHeight = canvasHeight;\r\n    this.currentTool = null;\r\n    this.currentStroke = [];\r\n    this.strokeManager = new StrokeManager(canvas);\r\n    this.canvasState = null;\r\n    this.shouldDraw = false;\r\n    this.shouldCommit = false;\r\n\r\n    // find pixel ratio relative to backing store and device ratio\r\n    const bsr = (canvas.getContext(\"2d\") as any).backingStorePixelRatio || 1;\r\n    const dpr = window.devicePixelRatio || 1;\r\n    this.pixelRatio = dpr / bsr;\r\n\r\n    this.setCanvasSize = this.setCanvasSize.bind(this);\r\n    this.setTool = this.setTool.bind(this);\r\n    this.destroy = this.destroy.bind(this);\r\n    this.clear = this.clear.bind(this);\r\n    this.draw = this.draw.bind(this);\r\n    this.onStrokePart = this.onStrokePart.bind(this);\r\n\r\n    // schedule animation frame loop\r\n    this.nextAnimationFrame = window.requestAnimationFrame(this.draw);\r\n    // set up listener for new stroke part\r\n    this.strokeManager.onStrokePart(this.onStrokePart);\r\n\r\n    this.setCanvasSize(canvasWidth, canvasHeight);\r\n  }\r\n\r\n  /**\r\n   * Sets the canvas desired width and height and sets transform\r\n   * for hifi displays\r\n   * @param width\r\n   * @param height\r\n   */\r\n  public setCanvasSize(width: number, height: number): void {\r\n    this.canvasWidth = width;\r\n    this.canvasHeight = height;\r\n\r\n    const { canvas, canvasWidth, canvasHeight, pixelRatio } = this;\r\n\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    // appropriately scale canvas to map to device ratio\r\n    canvas.width = canvasWidth * pixelRatio;\r\n    canvas.height = canvasHeight * pixelRatio;\r\n    canvas.style.width = canvasWidth + \"px\";\r\n    canvas.style.height = canvasHeight + \"px\";\r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n  }\r\n\r\n  /**\r\n   * Sets the current tool for the manager\r\n   * @param tool\r\n   */\r\n  public setTool(tool: ITool): void {\r\n    this.currentTool = tool;\r\n  }\r\n\r\n  /**\r\n   * Remove all event listeners\r\n   */\r\n  public destroy(): void {\r\n    // cancel animation loop\r\n    window.cancelAnimationFrame(this.nextAnimationFrame);\r\n    // remove all listeners on stroke manager\r\n    this.strokeManager.destroy();\r\n  }\r\n\r\n  /**\r\n   * Clears the canvas\r\n   */\r\n  public clear(): void {\r\n    this.canvasState = null;\r\n    this.currentStroke = [];\r\n    this.shouldDraw = true;\r\n    this.shouldCommit = true;\r\n  }\r\n\r\n  /**\r\n   * Adds a new stroke part to the nextStrokes\r\n   * array\r\n   * @param strokePart\r\n   */\r\n  private onStrokePart(strokePart: IStrokePart): void {\r\n    this.currentStroke.push(strokePart);\r\n\r\n    this.shouldDraw = true;\r\n\r\n    if (strokePart.isEnd) {\r\n      this.shouldCommit = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Draws a frame\r\n   */\r\n  private draw(): void {\r\n    // schedule next draw\r\n    this.nextAnimationFrame = window.requestAnimationFrame(this.draw);\r\n\r\n    const ctx = this.canvas.getContext(\"2d\");\r\n\r\n    if (!this.shouldDraw) {\r\n      return;\r\n    }\r\n\r\n    // clear canvas\r\n    ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\r\n\r\n    // draw current state\r\n    if (this.canvasState) {\r\n      ctx.putImageData(this.canvasState, 0, 0);\r\n    }\r\n\r\n    // if a tool has been selected and there are\r\n    // pending strokes, draw them\r\n    if (this.currentTool && this.currentStroke.length) {\r\n      ctx.save();\r\n      this.currentTool.draw(ctx, this.currentStroke);\r\n      ctx.restore();\r\n    }\r\n\r\n    // if all changes have been made for current stroke,\r\n    // save it as the new canvas state\r\n    if (this.shouldCommit) {\r\n      this.canvasState = ctx.getImageData(\r\n        0,\r\n        0,\r\n        this.canvasWidth * this.pixelRatio,\r\n        this.canvasHeight * this.pixelRatio\r\n      );\r\n      this.currentStroke = [];\r\n      this.shouldCommit = false;\r\n    }\r\n\r\n    this.shouldDraw = false;\r\n  }\r\n}\r\n","import { IStrokePart } from \"../types\";\r\n\r\nexport class PenTool {\r\n  readonly color: string;\r\n  readonly width: number;\r\n\r\n  constructor(color: string = \"red\", width: number = 3) {\r\n    this.color = color;\r\n    this.width = width;\r\n  }\r\n\r\n  /**\r\n   * Draws a \"pen stroke\" for all line segments\r\n   * @param ctx\r\n   * @param strokeParts\r\n   */\r\n  public draw(ctx: CanvasRenderingContext2D, strokeParts: IStrokePart[]): void {\r\n    const firstPart = strokeParts[0];\r\n\r\n    ctx.beginPath();\r\n\r\n    ctx.lineWidth = this.width;\r\n    ctx.strokeStyle = this.color;\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n\r\n    ctx.moveTo(firstPart.startPoint.x, firstPart.startPoint.y);\r\n\r\n    strokeParts.forEach((strokePart) => {\r\n      const { endPoint } = strokePart;\r\n      ctx.lineTo(endPoint.x, endPoint.y);\r\n    });\r\n\r\n    ctx.stroke();\r\n  }\r\n}\r\n","import { IStrokePart, IPoint } from \"../types\";\r\nimport { getUnitVector, getEuclidean } from \"../util\";\r\n\r\nexport interface IHandleOptions {\r\n  hide: boolean;\r\n  strokeWidth: number;\r\n  fillColor: string;\r\n  strokeColor: string;\r\n}\r\n\r\nexport class EraserTool {\r\n  readonly width: number;\r\n  readonly handleOpts: IHandleOptions;\r\n\r\n  constructor(width: number = 10, handleOpts?: Partial<IHandleOptions>) {\r\n    this.width = width;\r\n\r\n    handleOpts = handleOpts || {};\r\n\r\n    this.handleOpts = {\r\n      hide: handleOpts.hide || false,\r\n      strokeWidth: handleOpts.strokeWidth || 2,\r\n      fillColor: handleOpts.fillColor || \"white\",\r\n      strokeColor: handleOpts.strokeColor || \"black\",\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Draws an \"eraser stroke\" for all line segments\r\n   * @param ctx\r\n   * @param strokeParts\r\n   */\r\n  public draw(ctx: CanvasRenderingContext2D, strokeParts: IStrokePart[]): void {\r\n    const { handleOpts } = this;\r\n    const halfWidth = this.width / 2.0;\r\n\r\n    strokeParts.forEach((strokePart) => {\r\n      const { startPoint, endPoint, isEnd } = strokePart;\r\n\r\n      const length = getEuclidean(startPoint, endPoint);\r\n      const unitVect: IPoint = getUnitVector(startPoint, endPoint);\r\n      let currentPoint: IPoint = startPoint;\r\n      let i = 0;\r\n\r\n      // clear all the way along the drag\r\n      while (i < length) {\r\n        const nextPoint: IPoint = {\r\n          x: currentPoint.x + unitVect.x,\r\n          y: currentPoint.y + unitVect.y,\r\n        };\r\n\r\n        ctx.clearRect(\r\n          nextPoint.x - halfWidth,\r\n          nextPoint.y - halfWidth,\r\n          this.width,\r\n          this.width\r\n        );\r\n\r\n        i++;\r\n        currentPoint = nextPoint;\r\n      }\r\n    });\r\n\r\n    const lastPart = strokeParts[strokeParts.length - 1];\r\n\r\n    // if the end is not the last part, then draw\r\n    // the tool indicator at the endpoint\r\n    if (!lastPart.isEnd && !handleOpts.hide) {\r\n      ctx.strokeStyle = handleOpts.strokeColor;\r\n      ctx.fillStyle = handleOpts.fillColor;\r\n\r\n      ctx.fillRect(\r\n        lastPart.endPoint.x - halfWidth,\r\n        lastPart.endPoint.y - halfWidth,\r\n        this.width,\r\n        this.width\r\n      );\r\n\r\n      ctx.strokeRect(\r\n        lastPart.endPoint.x - halfWidth + 0.5,\r\n        lastPart.endPoint.y - halfWidth + 0.5,\r\n        this.width - 1,\r\n        this.width - 1\r\n      );\r\n    }\r\n  }\r\n}\r\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\tif (typeof cstr === 'string') {\n\t\tcstr = cstr.toLowerCase();\n\n\t\t//keyword\n\t\tif (names[cstr]) {\n\t\t\tparts = names[cstr].slice()\n\t\t\tspace = 'rgb'\n\t\t}\n\n\t\t//reserved words\n\t\telse if (cstr === 'transparent') {\n\t\t\talpha = 0\n\t\t\tspace = 'rgb'\n\t\t\tparts = [0, 0, 0]\n\t\t}\n\n\t\t//hex\n\t\telse if (/^#[A-Fa-f0-9]+$/.test(cstr)) {\n\t\t\tvar base = cstr.slice(1)\n\t\t\tvar size = base.length\n\t\t\tvar isShort = size <= 4\n\t\t\talpha = 1\n\n\t\t\tif (isShort) {\n\t\t\t\tparts = [\n\t\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t\t]\n\t\t\t\tif (size === 4) {\n\t\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tparts = [\n\t\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t\t]\n\t\t\t\tif (size === 8) {\n\t\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!parts[0]) parts[0] = 0\n\t\t\tif (!parts[1]) parts[1] = 0\n\t\t\tif (!parts[2]) parts[2] = 0\n\n\t\t\tspace = 'rgb'\n\t\t}\n\n\t\t//color space\n\t\telse if (m = /^((?:rgb|hs[lvb]|hwb|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms)a?)\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\t\tvar name = m[1]\n\t\t\tvar isRGB = name === 'rgb'\n\t\t\tvar base = name.replace(/a$/, '')\n\t\t\tspace = base\n\t\t\tvar size = base === 'cmyk' ? 4 : base === 'gray' ? 1 : 3\n\t\t\tparts = m[2].trim()\n\t\t\t\t.split(/\\s*[,\\/]\\s*|\\s+/)\n\t\t\t\t.map(function (x, i) {\n\t\t\t\t\t//<percentage>\n\t\t\t\t\tif (/%$/.test(x)) {\n\t\t\t\t\t\t//alpha\n\t\t\t\t\t\tif (i === size) return parseFloat(x) / 100\n\t\t\t\t\t\t//rgb\n\t\t\t\t\t\tif (base === 'rgb') return parseFloat(x) * 255 / 100\n\t\t\t\t\t\treturn parseFloat(x)\n\t\t\t\t\t}\n\t\t\t\t\t//hue\n\t\t\t\t\telse if (base[i] === 'h') {\n\t\t\t\t\t\t//<deg>\n\t\t\t\t\t\tif (/deg$/.test(x)) {\n\t\t\t\t\t\t\treturn parseFloat(x)\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//<base-hue>\n\t\t\t\t\t\telse if (baseHues[x] !== undefined) {\n\t\t\t\t\t\t\treturn baseHues[x]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn parseFloat(x)\n\t\t\t\t})\n\n\t\t\tif (name === base) parts.push(1)\n\t\t\talpha = (isRGB) ? 1 : (parts[size] === undefined) ? 1 : parts[size]\n\t\t\tparts = parts.slice(0, size)\n\t\t}\n\n\t\t//named channels case\n\t\telse if (cstr.length > 10 && /[0-9](?:\\s|\\/)/.test(cstr)) {\n\t\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\t\treturn parseFloat(value)\n\t\t\t})\n\n\t\t\tspace = cstr.match(/([a-z])/ig).join('').toLowerCase()\n\t\t}\n\t}\n\n\t//numeric case\n\telse if (!isNaN(cstr)) {\n\t\tspace = 'rgb'\n\t\tparts = [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff]\n\t}\n\n\t//array-like\n\telse if (Array.isArray(cstr) || cstr.length) {\n\t\tparts = [cstr[0], cstr[1], cstr[2]]\n\t\tspace = 'rgb'\n\t\talpha = cstr.length === 4 ? cstr[3] : 1\n\t}\n\n\t//object case - detects css cases of rgb and hsl\n\telse if (cstr instanceof Object) {\n\t\tif (cstr.r != null || cstr.red != null || cstr.R != null) {\n\t\t\tspace = 'rgb'\n\t\t\tparts = [\n\t\t\t\tcstr.r || cstr.red || cstr.R || 0,\n\t\t\t\tcstr.g || cstr.green || cstr.G || 0,\n\t\t\t\tcstr.b || cstr.blue || cstr.B || 0\n\t\t\t]\n\t\t}\n\t\telse {\n\t\t\tspace = 'hsl'\n\t\t\tparts = [\n\t\t\t\tcstr.h || cstr.hue || cstr.H || 0,\n\t\t\t\tcstr.s || cstr.saturation || cstr.S || 0,\n\t\t\t\tcstr.l || cstr.lightness || cstr.L || cstr.b || cstr.brightness\n\t\t\t]\n\t\t}\n\n\t\talpha = cstr.a || cstr.alpha || cstr.opacity || 1\n\n\t\tif (cstr.opacity != null) alpha /= 100\n\t}\n\n\treturn {\n\t\tspace: space,\n\t\tvalues: parts,\n\t\talpha: alpha\n\t}\n}\n","/**\r\n * @module  color-alpha\r\n */\r\nimport parse from 'color-parse';\r\n\r\nexport default function alpha (color, value) {\r\n\tvar obj = parse(color);\r\n\r\n\tif (value == null) value = obj.alpha;\r\n\r\n\t//catch percent\r\n\tif (obj.space[0] === 'h') {\r\n\t\treturn obj.space + ['a(', obj.values[0], ',', obj.values[1], '%,', obj.values[2], '%,', value, ')'].join('');\r\n\t}\r\n\r\n\treturn obj.space + ['a(', obj.values, ',', value, ')'].join('');\r\n}\r\n","import alpha from \"color-alpha\";\r\n\r\nimport { IStrokePart } from \"../types\";\r\n\r\nexport class HighlighterTool {\r\n  readonly color: string;\r\n  readonly width: number;\r\n\r\n  constructor(\r\n    color: string = \"yellow\",\r\n    width: number = 8,\r\n    opacity: Number = 0.3\r\n  ) {\r\n    this.width = width;\r\n\r\n    // calculate color w/ opacity\r\n    this.color = alpha(color, 0.4);\r\n  }\r\n\r\n  /**\r\n   * Draws a \"highlighter stroke\" for all line segments\r\n   * @param ctx\r\n   * @param strokeParts\r\n   */\r\n  public draw(ctx: CanvasRenderingContext2D, strokeParts: IStrokePart[]): void {\r\n    const firstPart = strokeParts[0];\r\n\r\n    ctx.beginPath();\r\n\r\n    ctx.lineWidth = this.width;\r\n    ctx.strokeStyle = this.color;\r\n    ctx.lineCap = \"butt\";\r\n    ctx.miterLimit = 1;\r\n\r\n    ctx.moveTo(firstPart.startPoint.x, firstPart.startPoint.y);\r\n\r\n    strokeParts.forEach((strokePart) => {\r\n      const { endPoint } = strokePart;\r\n      ctx.lineTo(endPoint.x, endPoint.y);\r\n    });\r\n\r\n    ctx.stroke();\r\n  }\r\n}\r\n"],"names":["getEuclidean","p1","p2","getUnitVector","startPoint","endPoint","length","dirVect","StrokeManager","canvas","handler","clientX","clientY","rect","e","touch","touches","nextTouch","strokePart","Manager","canvasWidth","canvasHeight","bsr","dpr","width","height","pixelRatio","ctx","tool","PenTool","color","strokeParts","firstPart","EraserTool","handleOpts","halfWidth","isEnd","unitVect","currentPoint","i","nextPoint","lastPart","colorName","baseHues","parse","cstr","m","parts","alpha","space","names","base","size","isShort","name","isRGB","x","value","obj","HighlighterTool","opacity"],"mappings":"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","x_google_ignoreList":[5,6,7]}